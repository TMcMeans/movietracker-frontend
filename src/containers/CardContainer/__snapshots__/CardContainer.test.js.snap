// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardContainer CardContainer Component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardContainer
    addFavorite={[MockFunction]}
    addMessage={[MockFunction]}
    favorites={
      Array [
        Object {
          "movie_id": 1,
          "title": "Halloween",
        },
        Object {
          "movie_id": 2,
          "title": "It",
        },
        Object {
          "movie_id": 3,
          "title": "The Conjuring",
        },
      ]
    }
    match={
      Object {
        "path": "/favorites",
      }
    }
    movies={
      Array [
        Object {
          "movie_id": 1,
          "title": "Halloween",
        },
        Object {
          "movie_id": 2,
          "title": "It",
        },
        Object {
          "movie_id": 3,
          "title": "The Conjuring",
        },
      ]
    }
    removeFavorite={[MockFunction]}
    user={
      Object {
        "id": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Card
          addFavorite={[MockFunction]}
          isFavorite={true}
          movie={
            Object {
              "movie_id": 1,
              "title": "Halloween",
            }
          }
          removeFavorite={[MockFunction]}
          sendMessage={[MockFunction]}
          user={
            Object {
              "id": 1,
            }
          }
        />,
        <Card
          addFavorite={[MockFunction]}
          isFavorite={true}
          movie={
            Object {
              "movie_id": 2,
              "title": "It",
            }
          }
          removeFavorite={[MockFunction]}
          sendMessage={[MockFunction]}
          user={
            Object {
              "id": 1,
            }
          }
        />,
        <Card
          addFavorite={[MockFunction]}
          isFavorite={true}
          movie={
            Object {
              "movie_id": 3,
              "title": "The Conjuring",
            }
          }
          removeFavorite={[MockFunction]}
          sendMessage={[MockFunction]}
          user={
            Object {
              "id": 1,
            }
          }
        />,
      ],
      "className": "cardContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "Halloween",
        "nodeType": "function",
        "props": Object {
          "addFavorite": [MockFunction],
          "isFavorite": true,
          "movie": Object {
            "movie_id": 1,
            "title": "Halloween",
          },
          "removeFavorite": [MockFunction],
          "sendMessage": [MockFunction],
          "user": Object {
            "id": 1,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "It",
        "nodeType": "function",
        "props": Object {
          "addFavorite": [MockFunction],
          "isFavorite": true,
          "movie": Object {
            "movie_id": 2,
            "title": "It",
          },
          "removeFavorite": [MockFunction],
          "sendMessage": [MockFunction],
          "user": Object {
            "id": 1,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "The Conjuring",
        "nodeType": "function",
        "props": Object {
          "addFavorite": [MockFunction],
          "isFavorite": true,
          "movie": Object {
            "movie_id": 3,
            "title": "The Conjuring",
          },
          "removeFavorite": [MockFunction],
          "sendMessage": [MockFunction],
          "user": Object {
            "id": 1,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Card
            addFavorite={[MockFunction]}
            isFavorite={true}
            movie={
              Object {
                "movie_id": 1,
                "title": "Halloween",
              }
            }
            removeFavorite={[MockFunction]}
            sendMessage={[MockFunction]}
            user={
              Object {
                "id": 1,
              }
            }
          />,
          <Card
            addFavorite={[MockFunction]}
            isFavorite={true}
            movie={
              Object {
                "movie_id": 2,
                "title": "It",
              }
            }
            removeFavorite={[MockFunction]}
            sendMessage={[MockFunction]}
            user={
              Object {
                "id": 1,
              }
            }
          />,
          <Card
            addFavorite={[MockFunction]}
            isFavorite={true}
            movie={
              Object {
                "movie_id": 3,
                "title": "The Conjuring",
              }
            }
            removeFavorite={[MockFunction]}
            sendMessage={[MockFunction]}
            user={
              Object {
                "id": 1,
              }
            }
          />,
        ],
        "className": "cardContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "Halloween",
          "nodeType": "function",
          "props": Object {
            "addFavorite": [MockFunction],
            "isFavorite": true,
            "movie": Object {
              "movie_id": 1,
              "title": "Halloween",
            },
            "removeFavorite": [MockFunction],
            "sendMessage": [MockFunction],
            "user": Object {
              "id": 1,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "It",
          "nodeType": "function",
          "props": Object {
            "addFavorite": [MockFunction],
            "isFavorite": true,
            "movie": Object {
              "movie_id": 2,
              "title": "It",
            },
            "removeFavorite": [MockFunction],
            "sendMessage": [MockFunction],
            "user": Object {
              "id": 1,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "The Conjuring",
          "nodeType": "function",
          "props": Object {
            "addFavorite": [MockFunction],
            "isFavorite": true,
            "movie": Object {
              "movie_id": 3,
              "title": "The Conjuring",
            },
            "removeFavorite": [MockFunction],
            "sendMessage": [MockFunction],
            "user": Object {
              "id": 1,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`CardContainer CardContainer Component should match snapshot if match !== favorites 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardContainer
    addFavorite={[MockFunction]}
    addMessage={[MockFunction]}
    favorites={
      Array [
        Object {
          "movie_id": 1,
          "title": "Halloween",
        },
        Object {
          "movie_id": 2,
          "title": "It",
        },
        Object {
          "movie_id": 3,
          "title": "The Conjuring",
        },
      ]
    }
    match={
      Object {
        "path": "/favorites",
      }
    }
    movies={
      Array [
        Object {
          "movie_id": 1,
          "title": "Halloween",
        },
        Object {
          "movie_id": 2,
          "title": "It",
        },
        Object {
          "movie_id": 3,
          "title": "The Conjuring",
        },
      ]
    }
    removeFavorite={[MockFunction]}
    user={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Login to see Stalked Movies",
      "className": "stalked-message",
    },
    "ref": null,
    "rendered": "Login to see Stalked Movies",
    "type": "p",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Login to see Stalked Movies",
        "className": "stalked-message",
      },
      "ref": null,
      "rendered": "Login to see Stalked Movies",
      "type": "p",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`CardContainer CardContainer Component should match snapshot if there is 0 favorites 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardContainer
    addFavorite={[MockFunction]}
    addMessage={[MockFunction]}
    favorites={
      Array [
        Object {
          "movie_id": 1,
          "title": "Halloween",
        },
        Object {
          "movie_id": 2,
          "title": "It",
        },
        Object {
          "movie_id": 3,
          "title": "The Conjuring",
        },
      ]
    }
    match={
      Object {
        "path": "/favorites",
      }
    }
    movies={
      Array [
        Object {
          "movie_id": 1,
          "title": "Halloween",
        },
        Object {
          "movie_id": 2,
          "title": "It",
        },
        Object {
          "movie_id": 3,
          "title": "The Conjuring",
        },
      ]
    }
    removeFavorite={[MockFunction]}
    user={
      Object {
        "id": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Card
          addFavorite={[MockFunction]}
          isFavorite={true}
          movie={
            Object {
              "movie_id": 1,
              "title": "Halloween",
            }
          }
          removeFavorite={[MockFunction]}
          sendMessage={[MockFunction]}
          user={
            Object {
              "id": 1,
            }
          }
        />,
        <Card
          addFavorite={[MockFunction]}
          isFavorite={true}
          movie={
            Object {
              "movie_id": 2,
              "title": "It",
            }
          }
          removeFavorite={[MockFunction]}
          sendMessage={[MockFunction]}
          user={
            Object {
              "id": 1,
            }
          }
        />,
        <Card
          addFavorite={[MockFunction]}
          isFavorite={true}
          movie={
            Object {
              "movie_id": 3,
              "title": "The Conjuring",
            }
          }
          removeFavorite={[MockFunction]}
          sendMessage={[MockFunction]}
          user={
            Object {
              "id": 1,
            }
          }
        />,
      ],
      "className": "cardContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "Halloween",
        "nodeType": "function",
        "props": Object {
          "addFavorite": [MockFunction],
          "isFavorite": true,
          "movie": Object {
            "movie_id": 1,
            "title": "Halloween",
          },
          "removeFavorite": [MockFunction],
          "sendMessage": [MockFunction],
          "user": Object {
            "id": 1,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "It",
        "nodeType": "function",
        "props": Object {
          "addFavorite": [MockFunction],
          "isFavorite": true,
          "movie": Object {
            "movie_id": 2,
            "title": "It",
          },
          "removeFavorite": [MockFunction],
          "sendMessage": [MockFunction],
          "user": Object {
            "id": 1,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "The Conjuring",
        "nodeType": "function",
        "props": Object {
          "addFavorite": [MockFunction],
          "isFavorite": true,
          "movie": Object {
            "movie_id": 3,
            "title": "The Conjuring",
          },
          "removeFavorite": [MockFunction],
          "sendMessage": [MockFunction],
          "user": Object {
            "id": 1,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Card
            addFavorite={[MockFunction]}
            isFavorite={true}
            movie={
              Object {
                "movie_id": 1,
                "title": "Halloween",
              }
            }
            removeFavorite={[MockFunction]}
            sendMessage={[MockFunction]}
            user={
              Object {
                "id": 1,
              }
            }
          />,
          <Card
            addFavorite={[MockFunction]}
            isFavorite={true}
            movie={
              Object {
                "movie_id": 2,
                "title": "It",
              }
            }
            removeFavorite={[MockFunction]}
            sendMessage={[MockFunction]}
            user={
              Object {
                "id": 1,
              }
            }
          />,
          <Card
            addFavorite={[MockFunction]}
            isFavorite={true}
            movie={
              Object {
                "movie_id": 3,
                "title": "The Conjuring",
              }
            }
            removeFavorite={[MockFunction]}
            sendMessage={[MockFunction]}
            user={
              Object {
                "id": 1,
              }
            }
          />,
        ],
        "className": "cardContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "Halloween",
          "nodeType": "function",
          "props": Object {
            "addFavorite": [MockFunction],
            "isFavorite": true,
            "movie": Object {
              "movie_id": 1,
              "title": "Halloween",
            },
            "removeFavorite": [MockFunction],
            "sendMessage": [MockFunction],
            "user": Object {
              "id": 1,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "It",
          "nodeType": "function",
          "props": Object {
            "addFavorite": [MockFunction],
            "isFavorite": true,
            "movie": Object {
              "movie_id": 2,
              "title": "It",
            },
            "removeFavorite": [MockFunction],
            "sendMessage": [MockFunction],
            "user": Object {
              "id": 1,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "The Conjuring",
          "nodeType": "function",
          "props": Object {
            "addFavorite": [MockFunction],
            "isFavorite": true,
            "movie": Object {
              "movie_id": 3,
              "title": "The Conjuring",
            },
            "removeFavorite": [MockFunction],
            "sendMessage": [MockFunction],
            "user": Object {
              "id": 1,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`CardContainer CardContainer Component should match snapshot if there is no uset 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardContainer
    addFavorite={[MockFunction]}
    addMessage={[MockFunction]}
    favorites={Array []}
    match={
      Object {
        "path": "/favorites",
      }
    }
    movies={
      Array [
        Object {
          "movie_id": 1,
          "title": "Halloween",
        },
        Object {
          "movie_id": 2,
          "title": "It",
        },
        Object {
          "movie_id": 3,
          "title": "The Conjuring",
        },
      ]
    }
    removeFavorite={[MockFunction]}
    user={
      Object {
        "id": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "You have not Stalked any Movies",
      "className": "stalked-message",
    },
    "ref": null,
    "rendered": "You have not Stalked any Movies",
    "type": "p",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "You have not Stalked any Movies",
        "className": "stalked-message",
      },
      "ref": null,
      "rendered": "You have not Stalked any Movies",
      "type": "p",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
