// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App matches snapshot with all data correctly rendered 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    fetchMovies={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="header"
        >
          <span
            className="movie"
          >
            <Link
              replace={false}
              to="/"
            >
              Movie
            </Link>
          </span>
          <span
            className="stalker"
          >
            <Link
              replace={false}
              to="/"
            >
              Stalker
            </Link>
          </span>
        </h1>,
        <Connect(Menu) />,
        <Switch>
          <Route
            component={[Function]}
            exact={true}
            path="/"
          />
          <Route
            path="/login"
            render={[Function]}
          />
          <Route
            component={[Function]}
            path="/favorites"
          />
          <Redirect
            push={false}
            to="/"
          />
        </Switch>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="movie"
            >
              <Link
                replace={false}
                to="/"
              >
                Movie
              </Link>
            </span>,
            <span
              className="stalker"
            >
              <Link
                replace={false}
                to="/"
              >
                Stalker
              </Link>
            </span>,
          ],
          "className": "header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/"
              >
                Movie
              </Link>,
              "className": "movie",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Movie",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Movie",
              "type": [Function],
            },
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                replace={false}
                to="/"
              >
                Stalker
              </Link>,
              "className": "stalker",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Stalker",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Stalker",
              "type": [Function],
            },
            "type": "span",
          },
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              component={[Function]}
              exact={true}
              path="/"
            />,
            <Route
              path="/login"
              render={[Function]}
            />,
            <Route
              component={[Function]}
              path="/favorites"
            />,
            <Redirect
              push={false}
              to="/"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/login",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/favorites",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "push": false,
              "to": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="header"
          >
            <span
              className="movie"
            >
              <Link
                replace={false}
                to="/"
              >
                Movie
              </Link>
            </span>
            <span
              className="stalker"
            >
              <Link
                replace={false}
                to="/"
              >
                Stalker
              </Link>
            </span>
          </h1>,
          <Connect(Menu) />,
          <Switch>
            <Route
              component={[Function]}
              exact={true}
              path="/"
            />
            <Route
              path="/login"
              render={[Function]}
            />
            <Route
              component={[Function]}
              path="/favorites"
            />
            <Redirect
              push={false}
              to="/"
            />
          </Switch>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="movie"
              >
                <Link
                  replace={false}
                  to="/"
                >
                  Movie
                </Link>
              </span>,
              <span
                className="stalker"
              >
                <Link
                  replace={false}
                  to="/"
                >
                  Stalker
                </Link>
              </span>,
            ],
            "className": "header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/"
                >
                  Movie
                </Link>,
                "className": "movie",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Movie",
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Movie",
                "type": [Function],
              },
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/"
                >
                  Stalker
                </Link>,
                "className": "stalker",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Stalker",
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Stalker",
                "type": [Function],
              },
              "type": "span",
            },
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />,
              <Route
                path="/login"
                render={[Function]}
              />,
              <Route
                component={[Function]}
                path="/favorites"
              />,
              <Redirect
                push={false}
                to="/"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/login",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/favorites",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "push": false,
                "to": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
